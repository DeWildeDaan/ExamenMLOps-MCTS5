# This is a basic workflow to help you get started with Actions

name: MLOps Azure Data Preparing and AI Training

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events
  workflow_call:
    inputs:
      data_prep:
        description: '---Data preparing---'
        type: boolean
        default: true
        required: true
      process_images:
        description: 'Check to process the original data.'
        type: boolean
        default: true
        required: true
      ai_training:
        description: '---AI Training---'
        type: boolean
        required: true
        default: true
      train_on_local:
        description: 'Check if you want to train on the runner. Otherwise we train on Azure cloud machine'
        type: boolean
        default: false
        required: true
      api_creation:
        description: '---API Creation---'
        type: boolean
        default: true
        required: true
      create_docker_image:
        description: 'Check if you want to create a docker image of the API.'
        type: boolean
        default: true
        required: true
      azure_deployment:
        description: 'Check if we should deploy the API on AZURE.'
        type: boolean
        default: false
        required: true
      remove_deployment:
        description: 'Check if we should remove/update the previous docker/kubernetis deployment of the API LOCALLY. (if this is not a cold start)'
        type: boolean
        default: true
        required: true
      docker_deployment:
        description: 'Check if we should run the docker image of the API LOCALLY.'
        type: boolean
        default: false
        required: true
      kubernetis_deployment:
        description: 'Check if we should deploy the API on KUBERNETIS.'
        type: boolean
        default: false
        required: true

  workflow_dispatch:
    branches: [ main, lessonsteps/** ]
    inputs:
      data_prep:
        description: '---Data preparing---'
        type: boolean
        required: true
        default: true
      process_images:
        description: 'Check to process the original data.'
        type: boolean
        default: true
        required: true
      ai_training:
        description: '---AI Training---'
        type: boolean
        required: true
        default: true
      train_on_local:
        description: 'Check if you want to train on the runnder. Otherwise we train on Azure cloud machine'
        type: boolean
        default: false
        required: true
      api_creation:
        description: '---API Creation---'
        type: boolean
        default: true
        required: true
      create_docker_image:
        description: 'Check if you want to create a docker image of the API.'
        type: boolean
        default: true
        required: true
      azure_deployment:
        description: 'Check if we should deploy the API on AZURE.'
        type: boolean
        default: false
        required: true
      remove_deployment:
        description: 'Check if we should remove/update the previous docker/kubernetis deployment of the API LOCALLY. (if this is not a cold start)'
        type: boolean
        default: true
        required: true
      docker_deployment:
        description: 'Check if we should run the docker image of the API LOCALLY.'
        type: boolean
        default: false
        required: true
      kubernetis_deployment:
        description: 'Check if we should deploy the API on KUBERNETIS.'
        type: boolean
        default: true
        required: true
env:
  GIT_SHA: ${{ github.sha }}

jobs:
  frontend-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to GHCR
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: ./frontend
          file: ./Dockerfile
          push: true
          tags: daandewilde/mlops-exam-1-frontend:${{ env.GIT_SHA }}
  